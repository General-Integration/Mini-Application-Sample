{"ast":null,"code":"export default {\n  data() {\n    return {\n      bridge: \"\",\n      payload: \"\",\n      response: null\n    };\n  },\n  methods: {\n    clearForm() {\n      this.response = null;\n      this.payload = null;\n      this.bridge = null;\n    },\n    callBridge() {\n      let parsePayload = null;\n      this.response = null;\n      if (this.payload) {\n        try {\n          parsePayload = JSON.parse(this.payload);\n        } catch (error) {\n          parsePayload = null;\n        }\n      }\n      console.log(\"bridgeName: \", this.bridge);\n      console.log(\"payload: \", this.payload);\n      this.$bridge.callHandler(this.bridge, parsePayload).then(res => {\n        console.log(`${this.bridge}: `, res);\n        this.response = res;\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","bridge","payload","response","methods","clearForm","callBridge","parsePayload","JSON","parse","error","console","log","$bridge","callHandler","then","res"],"sources":["/Users/chhuonn.sophorn/Desktop/ABA-09-01-2023/Mini-Application-Sample/src/pages/BridgeHandlers/HandlerPlayground.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"bridge-form\">\n      <input placeholder=\"handler\" type=\"text\" v-model=\"bridge\" />\n      <textarea placeholder=\"payload\" v-model=\"payload\" />\n      <div class=\"buttons\">\n        <button type=\"submit\" @click=\"callBridge\">Call Bridge</button>\n        <button type=\"submit\" @click=\"clearForm\">Clear</button>\n      </div>\n    </div>\n\n    <code>\n      <pre>\n\n            {{ response }}\n        </pre\n      >\n    </code>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      bridge: \"\",\n      payload: \"\",\n      response: null,\n    };\n  },\n  methods: {\n    clearForm() {\n      this.response = null;\n      this.payload = null;\n      this.bridge = null;\n    },\n    callBridge() {\n      let parsePayload = null;\n      this.response = null;\n      if (this.payload) {\n        try {\n          parsePayload = JSON.parse(this.payload);\n        } catch (error) {\n          parsePayload = null;\n        }\n      }\n      console.log(\"bridgeName: \", this.bridge);\n      console.log(\"payload: \", this.payload);\n      this.$bridge.callHandler(this.bridge, parsePayload).then((res) => {\n        console.log(`${this.bridge}: `, res);\n        this.response = res;\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.bridge-form {\n  margin-top: 20px;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  input,\n  textarea {\n    display: block;\n    height: 40px;\n    border: 1px solid #d9d9d9;\n    border-radius: 4px;\n    padding: 0 10px;\n    margin-bottom: 10px;\n  }\n\n  .buttons {\n    display: flex;\n    align-items: stretch;\n    gap: 5px;\n    button {\n      flex: 1;\n    }\n  }\n}\n</style>\n"],"mappings":"AAsBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACF,QAAO,GAAI,IAAI;MACpB,IAAI,CAACD,OAAM,GAAI,IAAI;MACnB,IAAI,CAACD,MAAK,GAAI,IAAI;IACpB,CAAC;IACDK,UAAUA,CAAA,EAAG;MACX,IAAIC,YAAW,GAAI,IAAI;MACvB,IAAI,CAACJ,QAAO,GAAI,IAAI;MACpB,IAAI,IAAI,CAACD,OAAO,EAAE;QAChB,IAAI;UACFK,YAAW,GAAIC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACP,OAAO,CAAC;QACzC,EAAE,OAAOQ,KAAK,EAAE;UACdH,YAAW,GAAI,IAAI;QACrB;MACF;MACAI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACX,MAAM,CAAC;MACxCU,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACV,OAAO,CAAC;MACtC,IAAI,CAACW,OAAO,CAACC,WAAW,CAAC,IAAI,CAACb,MAAM,EAAEM,YAAY,CAAC,CAACQ,IAAI,CAAEC,GAAG,IAAK;QAChEL,OAAO,CAACC,GAAG,CAAE,GAAE,IAAI,CAACX,MAAO,IAAG,EAAEe,GAAG,CAAC;QACpC,IAAI,CAACb,QAAO,GAAIa,GAAG;MACrB,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}