{"ast":null,"code":"import { useQuery } from \"@vue/apollo-composable\";\nimport allCharactersQuery from \"../../graphql/allCharacters.query.gql\";\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nexport default {\n  __name: 'PlayGround',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let axiosResult = ref({});\n    let fetchResult = ref({});\n    let ajaxResult = ref({});\n    let xmlResult = ref({});\n    const api = ref(\"https://jsonplaceholder.typicode.com/users\");\n    function fetchRequest() {\n      fetch(api.value).then(res => res.json()).then(data => {\n        fetchResult.value = data;\n      }).catch(err => {\n        console.log(\"status: \", err.status);\n        fetchResult.value = err.response;\n      });\n    }\n    function axiosRequest() {\n      axios.get(api.value).then(res => {\n        axiosResult.value = res.data;\n      }).catch(err => {\n        axiosResult.value = err;\n      });\n    }\n    function ajaxRequest() {\n      $(document).ready(function () {\n        $.ajax({\n          url: api.value,\n          type: \"GET\",\n          success: function (result) {\n            ajaxResult.value = result;\n          },\n          error: function (error) {\n            ajaxResult.value = error;\n          }\n        });\n      });\n    }\n    function xmlRequest() {\n      let req = new XMLHttpRequest();\n      req.open(\"GET\", api.value);\n      req.send();\n      req.onload = () => {\n        if (req.status === 200) {\n          xmlResult.value = JSON.parse(req.response);\n        } else {\n          xmlResult.value = req.statusText;\n        }\n      };\n    }\n    function clearResult() {\n      axiosResult.value = {};\n      fetchResult.value = {};\n      ajaxResult.value = {};\n      xmlResult.value = {};\n      result.value = [];\n      fetchEnabled.value = false;\n    }\n\n    // graphql\n    let fetchEnabled = ref(false);\n    const {\n      result,\n      loading\n    } = useQuery(allCharactersQuery, null, {\n      enabled: fetchEnabled\n    });\n    const fetchCharacters = () => {\n      fetchEnabled.value = true;\n    };\n    function get(val, string) {\n      return _.get(val, string, []);\n    }\n    const __returned__ = {\n      get axiosResult() {\n        return axiosResult;\n      },\n      set axiosResult(v) {\n        axiosResult = v;\n      },\n      get fetchResult() {\n        return fetchResult;\n      },\n      set fetchResult(v) {\n        fetchResult = v;\n      },\n      get ajaxResult() {\n        return ajaxResult;\n      },\n      set ajaxResult(v) {\n        ajaxResult = v;\n      },\n      get xmlResult() {\n        return xmlResult;\n      },\n      set xmlResult(v) {\n        xmlResult = v;\n      },\n      api,\n      fetchRequest,\n      axiosRequest,\n      ajaxRequest,\n      xmlRequest,\n      clearResult,\n      get fetchEnabled() {\n        return fetchEnabled;\n      },\n      set fetchEnabled(v) {\n        fetchEnabled = v;\n      },\n      result,\n      loading,\n      fetchCharacters,\n      get,\n      get useQuery() {\n        return useQuery;\n      },\n      get allCharactersQuery() {\n        return allCharactersQuery;\n      },\n      ref,\n      get axios() {\n        return axios;\n      },\n      get $() {\n        return $;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useQuery","allCharactersQuery","ref","axios","$","axiosResult","fetchResult","ajaxResult","xmlResult","api","fetchRequest","fetch","value","then","res","json","data","catch","err","console","log","status","response","axiosRequest","get","ajaxRequest","document","ready","ajax","url","type","success","result","error","xmlRequest","req","XMLHttpRequest","open","send","onload","JSON","parse","statusText","clearResult","fetchEnabled","loading","enabled","fetchCharacters","val","string","_"],"sources":["/Users/chhuonn.sophorn/Desktop/ABA-09-01-2023/Mini-Application-Sample/src/pages/PlayGround.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\" style=\"margin-bottom: 60px\">\n    <div class=\"wrap-menu\">\n      <input\n        class=\"input-url\"\n        v-model=\"api\"\n        type=\"text\"\n        placeholder=\"API URL\"\n      />\n      <button @click=\"clearResult\">Clear Result</button>\n    </div>\n    <div class=\"card\">\n      <div class=\"header\">\n        <div class=\"title\">Axios</div>\n        <div class=\"button\">\n          <button @click=\"axiosRequest\">GET</button>\n        </div>\n      </div>\n      <div class=\"result\">\n        <div class=\"result-title\">Result</div>\n        <pre>{{ axiosResult }}</pre>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"header\">\n        <div class=\"title\">Fetch</div>\n        <div class=\"button\">\n          <button @click=\"fetchRequest\">GET</button>\n        </div>\n      </div>\n      <div class=\"result\">\n        <div class=\"result-title\">Result</div>\n        <pre>{{ fetchResult }}</pre>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"header\">\n        <div class=\"title\">Ajax</div>\n        <div class=\"button\">\n          <button @click=\"ajaxRequest\">GET</button>\n        </div>\n      </div>\n      <div class=\"result\">\n        <div class=\"result-title\">Result</div>\n        <pre>{{ ajaxResult }}</pre>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"header\">\n        <div class=\"title\">XML HTTP Request</div>\n        <div class=\"button\">\n          <button @click=\"xmlRequest()\">GET</button>\n        </div>\n      </div>\n      <div class=\"result\">\n        <div class=\"result-title\">Result</div>\n        <pre>{{ xmlResult }}</pre>\n      </div>\n    </div>\n    <div class=\"card\">\n      <div class=\"header\">\n        <div class=\"title\">\n          GraphQL\n          <small v-if=\"get(result, 'characters.results').length\"\n            >(reload to clear apollo cache)</small\n          >\n        </div>\n        <div class=\"button\">\n          <button @click=\"fetchCharacters()\">GET</button>\n        </div>\n      </div>\n      <div class=\"result\">\n        <div v-if=\"loading\">Loading...</div>\n        <ul v-else>\n          <li\n            v-for=\"character in get(result, 'characters.results')\"\n            :key=\"character.id\"\n          >\n            <h3>{{ character.name }}</h3>\n            <details>\n              <summary>Show more</summary>\n              <p><b>Specie:</b> {{ character.species }}</p>\n              <p><b>Gender:</b> {{ character.gender }}</p>\n            </details>\n            <hr />\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useQuery } from \"@vue/apollo-composable\";\nimport allCharactersQuery from \"../../graphql/allCharacters.query.gql\";\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\n\nlet axiosResult = ref({});\nlet fetchResult = ref({});\nlet ajaxResult = ref({});\nlet xmlResult = ref({});\n\nconst api = ref(\"https://jsonplaceholder.typicode.com/users\");\n\nfunction fetchRequest() {\n  fetch(api.value)\n    .then((res) => res.json())\n    .then((data) => {\n      fetchResult.value = data;\n    })\n    .catch((err) => {\n      console.log(\"status: \", err.status);\n      fetchResult.value = err.response;\n    });\n}\n\nfunction axiosRequest() {\n  axios\n    .get(api.value)\n    .then((res) => {\n      axiosResult.value = res.data;\n    })\n    .catch((err) => {\n      axiosResult.value = err;\n    });\n}\n\nfunction ajaxRequest() {\n  $(document).ready(function () {\n    $.ajax({\n      url: api.value,\n      type: \"GET\",\n      success: function (result) {\n        ajaxResult.value = result;\n      },\n      error: function (error) {\n        ajaxResult.value = error;\n      },\n    });\n  });\n}\n\nfunction xmlRequest() {\n  let req = new XMLHttpRequest();\n  req.open(\"GET\", api.value);\n  req.send();\n  req.onload = () => {\n    if (req.status === 200) {\n      xmlResult.value = JSON.parse(req.response);\n    } else {\n      xmlResult.value = req.statusText;\n    }\n  };\n}\n\nfunction clearResult() {\n  axiosResult.value = {};\n  fetchResult.value = {};\n  ajaxResult.value = {};\n  xmlResult.value = {};\n  result.value = [];\n  fetchEnabled.value = false;\n}\n\n// graphql\nlet fetchEnabled = ref(false);\nconst { result, loading } = useQuery(allCharactersQuery, null, {\n  enabled: fetchEnabled,\n});\nconst fetchCharacters = () => {\n  fetchEnabled.value = true;\n};\n\nfunction get(val, string) {\n  return _.get(val, string, []);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.wrap-menu {\n  padding: 8px 12px;\n  display: flex;\n  justify-content: space-between;\n  input.input-url {\n    width: 100%;\n    padding: 8px 12px;\n    border: 1px solid #e6ebf1;\n    margin-right: 10px;\n    font-size: 12px;\n  }\n}\nbutton {\n  background-color: aliceblue;\n  border: 1px solid #e6ebf1;\n  border-radius: 6px;\n  color: darkblue;\n  font-size: 12px;\n  padding: 6px 10px;\n\n  &:active {\n    background-color: #e6ebf1;\n    color: darkblue;\n  }\n}\n.card {\n  padding: 8px;\n  border: 1px solid #e6ebf1;\n  border-radius: 6px;\n  margin: 8px;\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .title {\n    font-size: 16px;\n  }\n  .result {\n    position: relative;\n    .result-title {\n      position: absolute;\n      top: 4px;\n      left: 4px;\n      background-color: #e6ebf1;\n      border-radius: 3px;\n      padding: 2px 4px;\n    }\n    pre {\n      max-height: 300px;\n      overflow-y: auto;\n      color: #20a10f;\n    }\n    background: #f7f8fa;\n    padding: 6px;\n    margin-top: 8px;\n    text-transform: uppercase;\n    font-size: 10px;\n  }\n\n  ul {\n    list-style: none;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}