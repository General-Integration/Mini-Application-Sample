{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { inject, onMounted, ref } from \"vue\";\nexport default {\n  __name: 'HandlerPlayAudio',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let logs = ref([]);\n    const payload = ref({\n      playId: null,\n      playlist: [{\n        id: 1,\n        url: \"https://media.bookeyond.com/7/50.mp3\",\n        title: \"audio 1\",\n        thumbnail: \"https://via.placeholder.com/300x300.png?text=Audio+1\",\n        description: \"sample description for audio 1\",\n        bookId: 7\n      }, {\n        id: 2,\n        url: \"https://media.bookeyond.com/7/51.mp3\",\n        title: \"audio 2\",\n        thumbnail: \"https://via.placeholder.com/300x300.png?text=Audio+2\",\n        description: \"sample description for audio 2\",\n        bookId: 7\n      }, {\n        id: 3,\n        url: \"https://media.bookeyond.com/7/52.mp3\",\n        title: \"audio 3\",\n        thumbnail: \"https://via.placeholder.com/300x300.png?text=Audio+3\",\n        description: \"sample description for audio 3\",\n        bookId: 7\n      }]\n    });\n    const $bridge = inject(\"$bridge\");\n    onMounted(() => {\n      $bridge.registerHandler(\"onPlayIdChange\", res => {\n        setLog(`\"onPlayIdChange\" event triggered from native..`, res);\n        payload.value.playId = res.id;\n      });\n      setLog(`listening to \"onPlayIdChange\" event from native..`);\n      $bridge.registerHandler(\"redirectPage\", res => {\n        setLog(`\"redirectPage\" event triggered from native..`, res);\n      });\n      setLog(`listening to \"redirectPage\" event from native..`);\n    });\n    function onItemClick(item) {\n      payload.value.playId = item?.id;\n      $bridge.callHandler(\"setAudioPlay\", {\n        playId: item.id\n      });\n      setLog(`mini app called \"setAudioPlay\" handler`, {\n        playId: item.id\n      });\n    }\n    function onSetAudioPlay() {\n      const defaultPlayId = 1;\n      $bridge.callHandler(\"setAudioPlay\", {\n        playId: defaultPlayId\n      }).then(() => {\n        setLog(`mini app called \"setAudioPlay\" handler`, {\n          playId: defaultPlayId\n        });\n        payload.value.playId = defaultPlayId;\n      });\n    }\n    function onGetPlayingId() {\n      $bridge.callHandler(\"getPlayingId\").then(res => {\n        setLog(`mini app called \"getPlayingId\" handler`, res);\n        payload.value.playId = res.playId;\n      });\n    }\n    function onSetPlayList() {\n      payload.value.playId = 1;\n      $bridge.callHandler(\"setPlayList\", payload.value).then(data => {\n        setLog(`mini app called \"setPlayList\" handler`, data);\n      });\n    }\n    let playerMode = ref(\"FULL\");\n    function onSwitchPlayerMode() {\n      playerMode.value = playerMode.value === \"FULL\" ? \"MINI\" : \"FULL\";\n      console.log(playerMode.value);\n      $bridge.callHandler(\"switchPlayerMode\", {\n        mode: playerMode.value\n      }).then(() => {\n        setLog(`mini app called \"switchPlayerMode\" handler`, {\n          mode: playerMode.value\n        });\n      });\n    }\n    function setLog(desc, data) {\n      logs.value.push({\n        desc,\n        data\n      });\n    }\n    const __returned__ = {\n      get logs() {\n        return logs;\n      },\n      set logs(v) {\n        logs = v;\n      },\n      payload,\n      $bridge,\n      onItemClick,\n      onSetAudioPlay,\n      onGetPlayingId,\n      onSetPlayList,\n      get playerMode() {\n        return playerMode;\n      },\n      set playerMode(v) {\n        playerMode = v;\n      },\n      onSwitchPlayerMode,\n      setLog,\n      inject,\n      onMounted,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["inject","onMounted","ref","logs","payload","playId","playlist","id","url","title","thumbnail","description","bookId","$bridge","registerHandler","res","setLog","value","onItemClick","item","callHandler","onSetAudioPlay","defaultPlayId","then","onGetPlayingId","onSetPlayList","data","playerMode","onSwitchPlayerMode","console","log","mode","desc","push"],"sources":["/Users/chhuonn.sophorn/Desktop/ABA-09-01-2023/Mini-Application-Sample/src/pages/BridgeHandlers/HandlerPlayAudio.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 style=\"margin-left: 16px\">playAudio</h3>\n    <div style=\"margin: 16px\">\n      <div style=\"margin-bottom: 10px; font-size: 14px\">Handler logs</div>\n\n      <div class=\"log-container\">\n        <ol>\n          <li v-for=\"log in logs\" :key=\"log\" style=\"margin-bottom: 10px\">\n            <div>\n              {{ log.desc }}\n            </div>\n            <div style=\"margin-top: 8px; color: #07c160\" v-if=\"log.data\">\n              <code>\n                {{ log.data }}\n              </code>\n            </div>\n          </li>\n        </ol>\n      </div>\n\n      <div style=\"margin: 16px; display: flex\">\n        <van-button\n          style=\"margin: 0 auto\"\n          round\n          type=\"primary\"\n          size=\"mini\"\n          @click=\"logs = []\"\n        >\n          Clear Logs\n        </van-button>\n        <van-button\n          style=\"margin: 0 auto\"\n          round\n          type=\"primary\"\n          size=\"mini\"\n          @click=\"onGetPlayingId\"\n        >\n          getPlayingId\n        </van-button>\n        <van-button\n          style=\"margin: 0 auto\"\n          round\n          type=\"primary\"\n          size=\"mini\"\n          @click=\"onSetAudioPlay\"\n        >\n          setAudioPlay\n        </van-button>\n        <van-button\n          style=\"margin: 0 auto\"\n          round\n          type=\"primary\"\n          size=\"mini\"\n          @click=\"onSetPlayList\"\n        >\n          setPlayList\n        </van-button>\n        <van-button\n          style=\"margin: 0 auto\"\n          round\n          type=\"primary\"\n          size=\"mini\"\n          @click=\"onSwitchPlayerMode\"\n        >\n          switchPlayerMode\n        </van-button>\n      </div>\n    </div>\n    <van-list>\n      <van-cell-group v-for=\"item in payload.playlist\" :key=\"item\">\n        <van-cell\n          clickable\n          @click=\"onItemClick(item)\"\n          :title=\"item.title\"\n          :icon=\"\n            +payload.playId === +item.id ? 'pause-circle-o' : 'play-circle-o'\n          \"\n        />\n      </van-cell-group>\n    </van-list>\n  </div>\n</template>\n\n<script setup>\nimport { inject, onMounted, ref } from \"vue\";\nlet logs = ref([]);\nconst payload = ref({\n  playId: null,\n  playlist: [\n    {\n      id: 1,\n      url: \"https://media.bookeyond.com/7/50.mp3\",\n      title: \"audio 1\",\n      thumbnail: \"https://via.placeholder.com/300x300.png?text=Audio+1\",\n      description: \"sample description for audio 1\",\n      bookId: 7,\n    },\n    {\n      id: 2,\n      url: \"https://media.bookeyond.com/7/51.mp3\",\n      title: \"audio 2\",\n      thumbnail: \"https://via.placeholder.com/300x300.png?text=Audio+2\",\n      description: \"sample description for audio 2\",\n      bookId: 7,\n    },\n    {\n      id: 3,\n      url: \"https://media.bookeyond.com/7/52.mp3\",\n      title: \"audio 3\",\n      thumbnail: \"https://via.placeholder.com/300x300.png?text=Audio+3\",\n      description: \"sample description for audio 3\",\n      bookId: 7,\n    },\n  ],\n});\nconst $bridge = inject(\"$bridge\");\n\nonMounted(() => {\n  $bridge.registerHandler(\"onPlayIdChange\", (res) => {\n    setLog(`\"onPlayIdChange\" event triggered from native..`, res);\n    payload.value.playId = res.id;\n  });\n  setLog(`listening to \"onPlayIdChange\" event from native..`);\n\n  $bridge.registerHandler(\"redirectPage\", (res) => {\n    setLog(`\"redirectPage\" event triggered from native..`, res);\n  });\n  setLog(`listening to \"redirectPage\" event from native..`);\n});\n\nfunction onItemClick(item) {\n  payload.value.playId = item?.id;\n  $bridge.callHandler(\"setAudioPlay\", { playId: item.id });\n  setLog(`mini app called \"setAudioPlay\" handler`, { playId: item.id });\n}\n\nfunction onSetAudioPlay() {\n  const defaultPlayId = 1;\n  $bridge.callHandler(\"setAudioPlay\", { playId: defaultPlayId }).then(() => {\n    setLog(`mini app called \"setAudioPlay\" handler`, { playId: defaultPlayId });\n    payload.value.playId = defaultPlayId;\n  });\n}\n\nfunction onGetPlayingId() {\n  $bridge.callHandler(\"getPlayingId\").then((res) => {\n    setLog(`mini app called \"getPlayingId\" handler`, res);\n    payload.value.playId = res.playId;\n  });\n}\n\nfunction onSetPlayList() {\n  payload.value.playId = 1;\n  $bridge.callHandler(\"setPlayList\", payload.value).then((data) => {\n    setLog(`mini app called \"setPlayList\" handler`, data);\n  });\n}\nlet playerMode = ref(\"FULL\");\nfunction onSwitchPlayerMode() {\n  playerMode.value = playerMode.value === \"FULL\" ? \"MINI\" : \"FULL\";\n  console.log(playerMode.value);\n  $bridge\n    .callHandler(\"switchPlayerMode\", {\n      mode: playerMode.value,\n    })\n    .then(() => {\n      setLog(`mini app called \"switchPlayerMode\" handler`, {\n        mode: playerMode.value,\n      });\n    });\n}\n\nfunction setLog(desc, data) {\n  logs.value.push({\n    desc,\n    data,\n  });\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.log-container {\n  padding: 20px;\n  border: 1px solid rgb(235, 237, 240);\n  border-radius: 3px;\n  font-family: monospace;\n  margin-bottom: 20px;\n  overflow-y: auto;\n  height: 150px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}